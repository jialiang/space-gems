{"version":3,"sources":["Game/reducers.js","Game/utilities.js","Game/pages.js","Game/Game.js","Game/lifecycle.js","Game/constants.js","Game/handlers.js","index.js"],"names":["gemsReducer","state","action","newData","data","type","board","gemsKeys","Object","keys","forEach","key","gem","row","col","id","push","undefined","indexOf","destroyed","filter","Error","scoreReducer","value","statsReducer","match3","match4","match5","COUNTER","createGem","selection","Array","isArray","Math","floor","random","length","createRandomGemValue","gemId","createBoard","rowCount","colCount","typeCount","rowOffset","colOffset","gems","left","top","key1","key2","invalid","k","dispatchCreator","stateName","reducer","callback","setState","formatTime","time","toFixed","formatScore","score","toLocaleString","Game","props","initGameParameters","max","targetScore","timeLimit","highscore","parseInt","localStorage","getItem","soundManager","volume","parseFloat","publicUrl","process","playlist","index","filename","Audio","preload","playBgm","audio","play","onended","lenght","pauseBgm","pause","setVolume","setItem","getVolume","playSfx","initDispatchers","dispatchGems","call","dispatchScore","dispatchStats","initSetterGetters","getGem","selectedGemId","getGemFromBoard","setSelectedGem","getRemainingTime","remainingTime","setRemainingTime","isLocked","getStep","isWin","getTotalElapsed","getPage","page","setPage","step","setStep","getUndo","undo","setUndo","firstGemId","secondGemId","totalElapsed","setTotalElapsed","getLastTimestamp","lastTimestamp","setLastTimestamp","timestamp","getBgmVolume","setBgmVolume","initLifecycleStages","startCountDown","reportedFiveSecondsLeft","updateTime","now","performance","remaining","requestAnimationFrame","startGame","setTimeout","prepareNewGame","swapGems","isUndo","firstGem","secondGem","findMatches","matches","i","keyGroups","lastValue","j","group","destroyGems","updateGems","stats","addScore","match","replaceDestroyedGems","gap","newGem","dropGems","toMoveCount","cleanupGems","next","initUserEventHandlers","handleGemMouseDown","handleGemMouseEnter","hoveredGemId","selectedGem","hoveredGem","abs","handleChangePage","handleTouchMove","e","target","document","elementFromPoint","touches","clientX","clientY","initPages","startPage","onClick","playingPage","table","map","val","arr","style","transform","transitionDelay","className","onMouseDown","onMouseEnter","onTouchStart","data-value","timeCritical","split","color","onMouseUp","onMouseLeave","onTouchMove","display","menuPage","winStatus","title","defaultValue","onInput","min","creditsPage","href","rel","render","this","prevProps","prevState","currentStep","currentPage","Component","hydrate","getElementById"],"mappings":"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","file":"static/js/main.58db9932.chunk.js","sourcesContent":["export const gemsReducer = (state = {}, action = {}) => {\r\n  const newData = action.data;\r\n\r\n  switch (action.type) {\r\n    case \"set\":\r\n      const board = {};\r\n      const gemsKeys = [];\r\n\r\n      Object.keys(newData).forEach((key) => {\r\n        const gem = newData[key];\r\n\r\n        board[`${gem.row}_${gem.col}`] = gem.id;\r\n        gemsKeys.push(gem.id);\r\n      });\r\n\r\n      return {\r\n        ...action.data,\r\n        board,\r\n        gemsKeys,\r\n      };\r\n    case \"update\":\r\n      Object.keys(newData).forEach((key) => {\r\n        const gem = newData[key];\r\n\r\n        // Creating New Gem\r\n        if (state[key] === undefined && key.indexOf(\"gem-\") > -1) {\r\n          state.board[`${gem.row}_${gem.col}`] = gem.id;\r\n          state.gemsKeys.push(gem.id);\r\n          state[key] = gem;\r\n\r\n          return;\r\n        }\r\n\r\n        // Moving Gem\r\n        if (gem.row != null && gem.col != null) {\r\n          state[key].row = gem.row;\r\n          state[key].col = gem.col;\r\n\r\n          state.board[`${gem.row}_${gem.col}`] = key;\r\n        }\r\n\r\n        // Setting Destroyed Status\r\n        if (gem.destroyed) state[key].destroyed = gem.destroyed;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"cleanup\":\r\n      state.gemsKeys.forEach((key) => {\r\n        if (state[key] && state[key].destroyed) delete state[key];\r\n      });\r\n\r\n      Object.keys(state.board).forEach((key) => {\r\n        if (key.indexOf(\"-\") > -1) delete state.board[key];\r\n      });\r\n\r\n      state.gemsKeys = state.gemsKeys.filter((key) => state[key]);\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport const scoreReducer = (state = 0, action = {}) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return state + action.value;\r\n    case \"reset\":\r\n      return 0;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const statsReducer = (state = {}, action = {}) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return {\r\n        match3: (state.match3 || 0) + (action.data.match3 || 0),\r\n        match4: (state.match4 || 0) + (action.data.match4 || 0),\r\n        match5: (state.match5 || 0) + (action.data.match5 || 0),\r\n      };\r\n    case \"reset\":\r\n      return {};\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n","let COUNTER = 0;\r\n\r\nconst createGemId = () => `gem-${(COUNTER += 1)}`;\r\n\r\nconst createRandomGemValue = (selection) => {\r\n  if (Array.isArray(selection)) return selection[Math.floor(Math.random() * selection.length)];\r\n\r\n  return Math.floor(Math.random() * selection);\r\n};\r\n\r\nexport const createGem = ({ row, col, selection, board }) => {\r\n  const value = createRandomGemValue(selection);\r\n  const gemId = createGemId();\r\n\r\n  if (board) board[`${row}_${col}`] = gemId;\r\n\r\n  return {\r\n    id: gemId,\r\n    value,\r\n    row,\r\n    col,\r\n  };\r\n};\r\n\r\nexport const createBoard = ({ rowCount, colCount, typeCount, rowOffset = 0, colOffset = 0 }) => {\r\n  const gems = {};\r\n  const board = {};\r\n\r\n  for (let row = 0; row < rowCount; row++) {\r\n    for (let col = 0; col < colCount; col++) {\r\n      let left = [];\r\n      let top = [];\r\n\r\n      if (col > 1) {\r\n        const key1 = board[`${row}_${col - 1}`];\r\n        const key2 = board[`${row}_${col - 2}`];\r\n\r\n        left = [gems[key1].value, gems[key2].value];\r\n      }\r\n\r\n      if (row > 1) {\r\n        const key1 = board[`${row - 1}_${col}`];\r\n        const key2 = board[`${row - 2}_${col}`];\r\n\r\n        top = [gems[key1].value, gems[key2].value];\r\n      }\r\n\r\n      const invalid = [left[0] === left[1] ? left[0] : null, top[0] === top[1] ? top[0] : null];\r\n      const selection = [];\r\n\r\n      for (let k = 0; k < typeCount; k++) {\r\n        if (k !== invalid[0] && k !== invalid[1]) selection.push(k);\r\n      }\r\n\r\n      const gem = createGem({ row, col, selection, board });\r\n\r\n      gem.row += rowOffset;\r\n      gem.col += colOffset;\r\n\r\n      gems[gem.id] = gem;\r\n    }\r\n  }\r\n\r\n  return gems;\r\n};\r\n\r\nexport function dispatchCreator(stateName, reducer) {\r\n  return (action, callback) => this.setState({ [stateName]: reducer(this.state[stateName], action) }, callback);\r\n}\r\n\r\nexport const soundManager = () => {\r\n  let volume = parseFloat(localStorage.getItem(\"volume\") || 0.5);\r\n  const publicUrl = process.env.PUBLIC_URL;\r\n\r\n  const playlist = [\"Ethereal Eternity\", \"Piano at Night\", \"Space Harmony\"];\r\n  let index = Math.floor(Math.random() * playlist.length);\r\n\r\n  const playBgm = () => {\r\n    let audio = playlist[index];\r\n    if (!audio.play) {\r\n      audio = new Audio(`${publicUrl}/music/${audio}.mp3`);\r\n      audio.onended = () => {\r\n        index = index + 1 === index.lenght ? 0 : index + 1;\r\n        playBgm();\r\n      };\r\n      playlist[index] = audio;\r\n    }\r\n    audio.volume = volume;\r\n    audio.play();\r\n  };\r\n\r\n  const pauseBgm = () => {\r\n    if (playlist[index].pause) playlist[index].pause();\r\n  };\r\n\r\n  const sfx = [\"5secondsleft\", \"congratulations\", \"ding\", \"gameover\", \"gamestart\", \"timesup\"];\r\n  sfx.forEach((filename) => {\r\n    const audio = new Audio(`${publicUrl}/sfx/${filename}.mp3`);\r\n    audio.preload = true;\r\n  });\r\n\r\n  return {\r\n    playBgm,\r\n    pauseBgm,\r\n    setVolume: (value) => {\r\n      if (playlist[index].play) playlist[index].volume = value;\r\n      volume = value;\r\n      localStorage.setItem(\"volume\", value);\r\n    },\r\n    getVolume: () => volume,\r\n    playSfx: (filename) => {\r\n      const audio = new Audio(`${publicUrl}/sfx/${filename}.mp3`);\r\n      audio.volume = volume * 2;\r\n      audio.play();\r\n    },\r\n  };\r\n};\r\n","import { START_GEM_DROP_DURATION } from \"./constants\";\r\n\r\nconst formatTime = (time) => ((time || 0) / 1000).toFixed(1);\r\n\r\nconst formatScore = (score) => score.toLocaleString(\"en-us\");\r\n\r\nexport const startPage = ({ handleChangePage, targetScore, timeLimit }) => {\r\n  return () => (\r\n    <section id=\"intro\">\r\n      <h1>Intro</h1>\r\n\r\n      <p>Greetings! You were exploring a nice planet when aliens boarded your ship!</p>\r\n\r\n      <p>\r\n        After a chain of bizarre events, you now find yourself in a situation where you have{\" \"}\r\n        <b>{timeLimit / 1000} seconds </b>\r\n        to <b>score {formatScore(targetScore)} points</b> in a tile-matching game over relaxing ambient music if you\r\n        want to save your ship and crew.\r\n      </p>\r\n\r\n      <button onClick={() => handleChangePage(\"newPlayingPage\")}>Start Game</button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport const playingPage = ({\r\n  timeLimit,\r\n  getRemainingTime,\r\n  handleGemMouseDown,\r\n  handleGemMouseEnter,\r\n  handleTouchMove,\r\n  setSelectedGem,\r\n  handleChangePage,\r\n}) => {\r\n  return ({ gems, score }) => {\r\n    const remainingTime = getRemainingTime();\r\n\r\n    const table = gems.gemsKeys.map((val, index, arr) => {\r\n      const id = arr[arr.length - 1 - index];\r\n\r\n      if (!gems[id]) return null;\r\n\r\n      const { value, row, col, destroyed } = gems[id];\r\n\r\n      const style = {\r\n        transform: `translate3d(${col * 100}%, ${row * 100}%, 0)`,\r\n      };\r\n\r\n      if (remainingTime === timeLimit) style.transitionDelay = `${(index * START_GEM_DROP_DURATION) / 1000}s`;\r\n\r\n      if (destroyed) style.transform += \" scale(0)\";\r\n\r\n      return (\r\n        <span\r\n          id={id}\r\n          className=\"gem\"\r\n          key={id}\r\n          style={style}\r\n          onMouseDown={() => handleGemMouseDown(id)}\r\n          onMouseEnter={() => handleGemMouseEnter(id)}\r\n          onTouchStart={() => handleGemMouseDown(id)}\r\n          data-value={value}\r\n        >\r\n          {value}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    const timeCritical = remainingTime < 5000;\r\n    const time = formatTime(remainingTime).split(\".\");\r\n\r\n    return (\r\n      <section id=\"game\">\r\n        <div className=\"top-bar\">\r\n          <span className=\"score\">\r\n            Score <b>{formatScore(score)}</b>\r\n          </span>\r\n          <span className=\"menu\">\r\n            <button onClick={() => handleChangePage(\"menuPage\")}>Menu</button>\r\n          </span>\r\n          <span className=\"time\" style={{ color: timeCritical ? \"red\" : \"\" }}>\r\n            Time{\" \"}\r\n            <b>\r\n              {time[0]}\r\n              <small>{time[1]}</small>\r\n            </b>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"board\"\r\n          onMouseUp={() => setSelectedGem(null)}\r\n          onMouseLeave={() => setSelectedGem(null)}\r\n          onTouchMove={handleTouchMove}\r\n        >\r\n          {table}\r\n        </div>\r\n        <div className=\"time-s-up\" style={{ display: remainingTime ? \"none\" : \"\" }}>\r\n          Time's up!\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n};\r\n\r\nexport const menuPage = ({ handleChangePage, targetScore, getRemainingTime, isWin, getBgmVolume, setBgmVolume }) => {\r\n  return ({ score, highscore, stats }) => {\r\n    const remainingTime = getRemainingTime();\r\n    const winStatus = isWin();\r\n\r\n    const title = winStatus === null ? \"Game Paused\" : winStatus ? \"Congratulations!\" : \"You lost\";\r\n\r\n    return (\r\n      <section id=\"menu\">\r\n        <div>\r\n          <h1>{title}</h1>\r\n\r\n          {winStatus === null && (\r\n            <div>\r\n              Time Left: <b>{formatTime(remainingTime)}s</b>\r\n            </div>\r\n          )}\r\n          <div>\r\n            Target Score: <b>{formatScore(targetScore)}</b>\r\n          </div>\r\n          <div>\r\n            Your Score: <b>{formatScore(score)}</b>\r\n          </div>\r\n          <div>\r\n            High Score: <b>{formatScore(highscore)}</b>\r\n          </div>\r\n\r\n          <div className=\"button-container\">\r\n            <button onClick={() => handleChangePage(\"newPlayingPage\")}>New Game</button>\r\n\r\n            {winStatus === null && <button onClick={() => handleChangePage(\"playingPage\")}>Resume Game</button>}\r\n          </div>\r\n\r\n          <div>\r\n            Volume:\r\n            <input\r\n              type=\"range\"\r\n              defaultValue={getBgmVolume()}\r\n              onInput={(e) => setBgmVolume(e.target.value)}\r\n              min=\"0\"\r\n              max=\"0.5\"\r\n              step=\"0.05\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"stats-container\">\r\n            <b>Stats This Round:</b>\r\n            <div>3 of a Kind: {stats.match3 || 0}</div>\r\n            <div>4 of a Kind: {stats.match4 || 0}</div>\r\n            <div>5 of a Kind: {stats.match5 || 0}</div>\r\n          </div>\r\n\r\n          <div className=\"button-container\">\r\n            <button onClick={() => handleChangePage(\"creditsPage\")}>Credits</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n};\r\n\r\nexport const creditsPage = ({ handleChangePage }) => {\r\n  return () => (\r\n    <section id=\"credits\">\r\n      <h1>Credits</h1>\r\n\r\n      <ul>\r\n        <li>\r\n          The music \"Ethereal Eternity\", \"Piano at Night\" and \"Space Harmony\" by{\" \"}\r\n          <a href=\"https://www.purple-planet.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Purple Planet Music\r\n          </a>{\" \"}\r\n          used under the{\" \"}\r\n          <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Creative Commons Attribution License 3.0\r\n          </a>\r\n          .\r\n        </li>\r\n        <li>\r\n          The background image \"Landscape Mountains Sun\" by{\" \"}\r\n          <a href=\"https://pixabay.com/users/8385-8385/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Reimund Bertrams\r\n          </a>{\" \"}\r\n          used under the{\" \"}\r\n          <a href=\"https://pixabay.com/service/license/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Pixabay License\r\n          </a>\r\n          .\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"button-container\">\r\n        <button onClick={() => handleChangePage(\"menuPage\")}>Back to Menu</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { Component } from \"react\";\r\n\r\nimport { gemsReducer, scoreReducer, statsReducer } from \"./reducers\";\r\nimport { handleGemMouseDown, handleGemMouseEnter, handleTouchMove, handleChangePage } from \"./handlers\";\r\nimport { dispatchCreator, soundManager } from \"./utilities\";\r\nimport {\r\n  startCountDown,\r\n  startGame,\r\n  swapGems,\r\n  findMatches,\r\n  destroyGems,\r\n  replaceDestroyedGems,\r\n  dropGems,\r\n  cleanupGems,\r\n  next,\r\n} from \"./lifecycle\";\r\nimport { startPage, playingPage, menuPage, creditsPage } from \"./pages\";\r\nimport { TRANSITION_DURATION, TIMES_UP_SCREEN_DURATION } from \"./constants\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initGameParameters(props);\r\n\r\n    this.state = { page: \"startPage\" };\r\n\r\n    this.initDispatchers();\r\n    this.initSetterGetters();\r\n    this.initLifecycleStages();\r\n    this.initUserEventHandlers();\r\n    this.initPages();\r\n  }\r\n\r\n  initGameParameters = (props) => {\r\n    this.rowCount = Math.max(props.rowCount || 8, 3);\r\n    this.colCount = Math.max(props.colCount || 8, 3);\r\n    this.typeCount = Math.max(props.typeCount || 5, 3);\r\n    this.targetScore = props.targetScore || 20000;\r\n    this.timeLimit = (props.timeLimit || 60) * 1000;\r\n\r\n    this.highscore = parseInt(localStorage.getItem(\"highscore\") || 0);\r\n    this.soundManager = soundManager();\r\n  };\r\n\r\n  initDispatchers = () => {\r\n    this.dispatchGems = dispatchCreator.call(this, \"gems\", gemsReducer);\r\n    this.dispatchScore = dispatchCreator.call(this, \"score\", scoreReducer);\r\n    this.dispatchStats = dispatchCreator.call(this, \"stats\", statsReducer);\r\n  };\r\n\r\n  initSetterGetters = () => {\r\n    this.getGem = (id) => this.state.gems[id === \"selectedGem\" ? this.selectedGemId : id];\r\n    this.getGemFromBoard = (row, col) => this.getGem(this.state.gems.board[`${row}_${col}`]);\r\n    this.setSelectedGem = (id) => (this.selectedGemId = id);\r\n\r\n    this.getRemainingTime = () => this.state.remainingTime;\r\n    this.setRemainingTime = (remainingTime, callback) => this.setState({ remainingTime }, callback);\r\n\r\n    this.isLocked = () => this.getStep() !== \"default\";\r\n    this.isWin = () => {\r\n      if (this.getTotalElapsed() < this.timeLimit) return null;\r\n\r\n      return this.state.score >= this.targetScore;\r\n    };\r\n\r\n    this.getPage = () => this.state.page;\r\n    this.setPage = (value) => {\r\n      this.setState({ page: value });\r\n\r\n      if (value !== \"startPage\") this.soundManager.playBgm();\r\n    };\r\n\r\n    this.getStep = () => this.state.step;\r\n    this.setStep = (value) => this.setState({ step: value });\r\n\r\n    this.getUndo = () => this.undo;\r\n    this.setUndo = (firstGemId, secondGemId) => (this.undo = firstGemId ? { firstGemId, secondGemId } : null);\r\n\r\n    this.getTotalElapsed = () => this.totalElapsed;\r\n    this.setTotalElapsed = (time) => (this.totalElapsed = time);\r\n\r\n    this.getLastTimestamp = () => this.lastTimestamp;\r\n    this.setLastTimestamp = (timestamp) => (this.lastTimestamp = timestamp);\r\n\r\n    this.getBgmVolume = this.soundManager.getVolume;\r\n    this.setBgmVolume = this.soundManager.setVolume;\r\n  };\r\n\r\n  initLifecycleStages = () => {\r\n    this.startCountDown = startCountDown(this);\r\n    this.startGame = startGame(this);\r\n\r\n    this.prepareNewGame = () => {\r\n      this.setSelectedGem(null);\r\n      this.setUndo(null);\r\n      this.setTotalElapsed(null);\r\n      this.setLastTimestamp(null);\r\n\r\n      this.dispatchGems({ type: \"set\", data: {} });\r\n      this.dispatchScore({ type: \"reset\" });\r\n      this.dispatchStats({ type: \"reset\" });\r\n\r\n      this.setStep(\"starting\");\r\n      this.setPage(\"playingPage\");\r\n      this.setRemainingTime(this.timeLimit);\r\n    };\r\n\r\n    this.swapGems = swapGems(this);\r\n    this.findMatches = findMatches(this);\r\n    this.destroyGems = destroyGems(this);\r\n    this.replaceDestroyedGems = replaceDestroyedGems(this);\r\n    this.dropGems = dropGems(this);\r\n    this.cleanupGems = cleanupGems(this);\r\n\r\n    this.next = next(this);\r\n  };\r\n\r\n  initUserEventHandlers = () => {\r\n    this.handleGemMouseDown = handleGemMouseDown(this);\r\n    this.handleGemMouseEnter = handleGemMouseEnter(this);\r\n    this.handleChangePage = handleChangePage(this);\r\n    this.handleTouchMove = handleTouchMove(this);\r\n  };\r\n\r\n  initPages = () => {\r\n    this.startPage = startPage(this);\r\n    this.playingPage = playingPage(this);\r\n    this.menuPage = menuPage(this);\r\n    this.creditsPage = creditsPage(this);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.soundManager.pause();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const currentStep = this.getStep();\r\n    const currentPage = this.getPage();\r\n\r\n    if (currentStep !== prevState.step && currentStep !== \"default\") {\r\n      if (currentStep === \"create\" || currentStep === \"starting\") {\r\n        requestAnimationFrame(this.next);\r\n      } else {\r\n        setTimeout(() => requestAnimationFrame(this.next), TRANSITION_DURATION);\r\n      }\r\n    }\r\n\r\n    if (currentPage !== prevState.page && currentPage === \"playingPage\" && currentStep !== \"starting\") {\r\n      this.startCountDown();\r\n    }\r\n\r\n    // Detect time's up\r\n    if (\r\n      (this.state.remainingTime !== prevState.remainingTime || currentStep !== prevState.step) &&\r\n      this.state.remainingTime <= 0 &&\r\n      currentStep === \"default\"\r\n    ) {\r\n      if (this.state.score > this.highscore) {\r\n        this.highscore = this.state.score;\r\n        localStorage.setItem(\"highscore\", this.state.score);\r\n      }\r\n\r\n      this.soundManager.playSfx(\"timesup\");\r\n\r\n      setTimeout(() => {\r\n        if (this.isWin()) this.soundManager.playSfx(\"congratulations\");\r\n        else this.soundManager.playSfx(\"gameover\");\r\n\r\n        this.handleChangePage(\"menuPage\");\r\n      }, TIMES_UP_SCREEN_DURATION);\r\n    }\r\n  }\r\n\r\n  render = () =>\r\n    this[this.getPage()]({\r\n      gems: this.state.gems,\r\n      score: this.state.score,\r\n      highscore: this.highscore,\r\n      targetScore: this.targetScore,\r\n      stats: this.state.stats,\r\n    });\r\n}\r\n\r\nexport default Game;\r\n","import { createBoard, createGem } from \"./utilities\";\r\nimport { TRANSITION_DURATION, START_GEM_DROP_DURATION } from \"./constants\";\r\n\r\nexport const startGame = ({ rowCount, colCount, typeCount, dispatchGems, setStep, startCountDown, soundManager }) => {\r\n  return () => {\r\n    dispatchGems({\r\n      type: \"update\",\r\n      data: createBoard({\r\n        rowCount,\r\n        colCount,\r\n        typeCount,\r\n        rowOffset: -rowCount,\r\n      }),\r\n    });\r\n\r\n    setStep(\"create\");\r\n\r\n    setTimeout(() => {\r\n      soundManager.playSfx(\"gamestart\");\r\n      requestAnimationFrame(startCountDown);\r\n    }, TRANSITION_DURATION + START_GEM_DROP_DURATION * rowCount * colCount);\r\n  };\r\n};\r\n\r\nexport const startCountDown = ({\r\n  timeLimit,\r\n  setRemainingTime,\r\n  setTotalElapsed,\r\n  setLastTimestamp,\r\n  getPage,\r\n  getTotalElapsed,\r\n  getLastTimestamp,\r\n  soundManager,\r\n}) => {\r\n  let reportedFiveSecondsLeft = false;\r\n\r\n  const updateTime = () => {\r\n    let lastTimestamp = getLastTimestamp();\r\n    let totalElapsed = getTotalElapsed();\r\n\r\n    if (totalElapsed && totalElapsed >= timeLimit) return;\r\n\r\n    if (getPage() !== \"playingPage\") return setLastTimestamp(null);\r\n\r\n    const now = performance.now();\r\n\r\n    if (!totalElapsed && !lastTimestamp) reportedFiveSecondsLeft = false;\r\n    if (!totalElapsed) totalElapsed = 0;\r\n    if (!lastTimestamp) lastTimestamp = now;\r\n\r\n    totalElapsed += now - lastTimestamp;\r\n    lastTimestamp = now;\r\n\r\n    const remaining = Math.max(timeLimit - totalElapsed, 0);\r\n\r\n    if (!reportedFiveSecondsLeft && remaining <= 5500) {\r\n      soundManager.playSfx(\"5secondsleft\");\r\n      reportedFiveSecondsLeft = true;\r\n    }\r\n\r\n    setTotalElapsed(totalElapsed);\r\n    setLastTimestamp(lastTimestamp);\r\n    setRemainingTime(remaining, () => requestAnimationFrame(updateTime));\r\n  };\r\n\r\n  return () => requestAnimationFrame(updateTime);\r\n};\r\n\r\nexport const swapGems = ({ getGem, setStep, dispatchGems, setUndo }) => {\r\n  return (firstGemId, secondGemId, isUndo) => {\r\n    const firstGem = getGem(firstGemId);\r\n    const secondGem = getGem(secondGemId);\r\n\r\n    dispatchGems({\r\n      type: \"update\",\r\n      data: {\r\n        [firstGemId]: {\r\n          row: secondGem.row,\r\n          col: secondGem.col,\r\n        },\r\n        [secondGemId]: {\r\n          row: firstGem.row,\r\n          col: firstGem.col,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (isUndo) setUndo(null);\r\n\r\n    setStep(isUndo ? \"unswap\" : \"swap\");\r\n  };\r\n};\r\n\r\nexport const findMatches = ({ getGemFromBoard, rowCount, colCount }) => {\r\n  return () => {\r\n    const matches = [];\r\n\r\n    for (let k = 0; k < 2; k++) {\r\n      for (let i = 0; i < (k === 0 ? rowCount : colCount); i++) {\r\n        const keyGroups = [];\r\n        let lastValue = null;\r\n\r\n        for (let j = 0; j < (k === 0 ? colCount : rowCount); j++) {\r\n          const gem = getGemFromBoard(k === 0 ? i : j, k === 0 ? j : i);\r\n\r\n          if (gem.value !== lastValue || gem.destroyed) {\r\n            keyGroups.push([gem.id]);\r\n          } else {\r\n            keyGroups[keyGroups.length - 1].push(gem.id);\r\n          }\r\n\r\n          lastValue = gem ? gem.value : null;\r\n        }\r\n\r\n        keyGroups.forEach((group) => {\r\n          if (group.length >= 3) matches.push(group);\r\n        });\r\n      }\r\n    }\r\n\r\n    return matches;\r\n  };\r\n};\r\n\r\nexport const destroyGems = ({ setStep, dispatchScore, dispatchGems, dispatchStats, soundManager }) => {\r\n  return (matches) => {\r\n    const updateGems = {};\r\n    const stats = {\r\n      match3: 0,\r\n      match4: 0,\r\n      match5: 0,\r\n    };\r\n    let addScore = 0;\r\n\r\n    matches.forEach((match) => {\r\n      addScore += (match.length - 2) * match.length * 100;\r\n      stats[`match${match.length}`] += 1;\r\n\r\n      match.forEach((gemId) => {\r\n        updateGems[gemId] = {\r\n          destroyed: true,\r\n        };\r\n      });\r\n    });\r\n\r\n    dispatchScore({\r\n      type: \"increment\",\r\n      value: addScore,\r\n    });\r\n    dispatchGems({\r\n      type: \"update\",\r\n      data: updateGems,\r\n    });\r\n    dispatchStats({\r\n      type: \"increment\",\r\n      data: stats,\r\n    });\r\n\r\n    soundManager.playSfx(\"ding\");\r\n    setStep(\"destroy\");\r\n  };\r\n};\r\n\r\nexport const replaceDestroyedGems = ({ getGemFromBoard, setStep, dispatchGems, rowCount, colCount, typeCount }) => {\r\n  return () => {\r\n    const updateGems = {};\r\n\r\n    for (let col = 0; col < colCount; col++) {\r\n      let gap = 0;\r\n\r\n      for (let row = rowCount - 1; row >= 0; row--) {\r\n        const gem = getGemFromBoard(row, col);\r\n\r\n        if (!gem || gem.destroyed) {\r\n          gap += 1;\r\n\r\n          const newGem = createGem({ row: gap * -1, col, selection: typeCount });\r\n          updateGems[newGem.id] = newGem;\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatchGems({\r\n      type: \"update\",\r\n      data: updateGems,\r\n    });\r\n\r\n    setStep(\"create\");\r\n  };\r\n};\r\n\r\nexport const dropGems = ({ getGemFromBoard, setStep, dispatchGems, rowCount, colCount }) => {\r\n  return () => {\r\n    const updateGems = {};\r\n\r\n    for (let col = 0; col < colCount; col++) {\r\n      let gap = 0;\r\n      let toMoveCount = rowCount;\r\n\r\n      for (let row = rowCount - 1; toMoveCount > 0; row--) {\r\n        const gem = getGemFromBoard(row, col);\r\n\r\n        if (!gem || gem.destroyed) {\r\n          gap += 1;\r\n          continue;\r\n        }\r\n\r\n        if (gap > 0) {\r\n          updateGems[gem.id] = {\r\n            row: gem.row + gap,\r\n            col: gem.col,\r\n          };\r\n        }\r\n\r\n        toMoveCount -= 1;\r\n      }\r\n    }\r\n\r\n    dispatchGems({\r\n      type: \"update\",\r\n      data: updateGems,\r\n    });\r\n\r\n    setStep(\"drop\");\r\n  };\r\n};\r\n\r\nexport const cleanupGems = ({ dispatchGems }) => {\r\n  return () => {\r\n    dispatchGems({\r\n      type: \"cleanup\",\r\n    });\r\n  };\r\n};\r\n\r\nexport const next = ({\r\n  getStep,\r\n  setStep,\r\n\r\n  startGame,\r\n  findMatches,\r\n  swapGems,\r\n  getUndo,\r\n  destroyGems,\r\n  replaceDestroyedGems,\r\n  dropGems,\r\n  cleanupGems,\r\n}) => {\r\n  return () => {\r\n    const step = getStep();\r\n    const undo = getUndo();\r\n\r\n    if (step === \"starting\") return startGame();\r\n\r\n    if (step === \"drop\") cleanupGems();\r\n\r\n    // Check matches only if previous action was swapping gems or dropping gems\r\n    let matches = [];\r\n\r\n    if (step === \"swap\" || step === \"drop\") matches = findMatches();\r\n\r\n    // If last step was swap gems and no matches, undo swap\r\n    if (step === \"swap\" && matches.length === 0 && undo) return swapGems(undo.firstGemId, undo.secondGemId, true);\r\n\r\n    // If there's match, destroy gems\r\n    if (matches.length !== 0) return destroyGems(matches);\r\n\r\n    // If last step was destroy, create new gems to replace\r\n    if (step === \"destroy\") return replaceDestroyedGems();\r\n\r\n    // If last step was creating new gems, start dropping gems to fill space\r\n    if (step === \"create\") return dropGems();\r\n\r\n    setStep(\"default\");\r\n  };\r\n};\r\n","export const TRANSITION_DURATION = 150;\r\nexport const START_GEM_DROP_DURATION = 35;\r\nexport const TIMES_UP_SCREEN_DURATION = 1500;\r\n","export const handleGemMouseDown = ({ isLocked, setSelectedGem }) => {\r\n  return (gemId) => {\r\n    if (isLocked()) return;\r\n\r\n    setSelectedGem(gemId);\r\n  };\r\n};\r\n\r\nexport const handleGemMouseEnter = ({ getGem, setSelectedGem, setUndo, swapGems }) => {\r\n  return (hoveredGemId) => {\r\n    const selectedGem = getGem(\"selectedGem\");\r\n\r\n    if (!selectedGem) return;\r\n\r\n    const hoveredGem = getGem(hoveredGemId);\r\n\r\n    // Make sure we swap only neighbouring gems\r\n    if (Math.abs(selectedGem.row - hoveredGem.row) + Math.abs(selectedGem.col - hoveredGem.col) !== 1) {\r\n      setSelectedGem(null);\r\n      return;\r\n    }\r\n\r\n    setUndo(selectedGem.id, hoveredGem.id);\r\n    swapGems(selectedGem.id, hoveredGem.id);\r\n    setSelectedGem(null);\r\n  };\r\n};\r\n\r\nexport const handleTouchMove = ({ getGem, handleGemMouseEnter }) => {\r\n  return (e) => {\r\n    const target = document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY);\r\n    const selectedGem = getGem(\"selectedGem\");\r\n\r\n    if (!selectedGem || !target || selectedGem.id === target.id) return;\r\n\r\n    handleGemMouseEnter(target.id);\r\n  };\r\n};\r\n\r\nexport const handleChangePage = ({ prepareNewGame, setPage }) => {\r\n  return (page) => {\r\n    if (page === \"newPlayingPage\") return prepareNewGame();\r\n\r\n    setPage(page);\r\n  };\r\n};\r\n","import { hydrate } from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Game from \"./Game/Game\";\r\n\r\nhydrate(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}